# This is a GitHub Actions workflow to build, test, and save artifacts for a Java project using Gradle.
# It is triggered by pushes to the main branch.

name: Build, Test, and Save Artifacts

on:
  push:
    branches:
      - [main,master] # Change this to your main branch name

jobs:
  build_test_and_save_artifacts:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the project's source code from the repository.
      - name: Checkout project sources
        uses: actions/checkout@v2

      # Step 2: Cache Gradle dependencies (if not already cached).
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          # The above line caches Gradle dependencies for faster builds.

      # Step 3: Set up the Gradle build tool on the runner.
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Step 4: Run the Gradle build using the Gradle Wrapper.
      - name: Run build with Gradle Wrapper
        run: ./gradlew build
        # The above line runs the Gradle build using the Gradle Wrapper.

      # Step 5: Run tests using the Gradle Wrapper.
      - name: Run Test with Gradle Wrapper
        run: ./gradlew test
        # The above line runs tests using the Gradle Wrapper.

      # Step 6: Publish JUnit-style test reports (uncomment when needed).
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        # The above lines publish JUnit-style test reports if available.

      # Step 7: Save build artifacts.
      - name: Save build artifacts
        if: success()
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts
          mv build/ $GITHUB_WORKSPACE/artifacts/
        # The above lines save build artifacts for download.

# Add a post-job to create a download link for the saved artifacts.
post_job:
  needs: build_test_and_save_artifacts
  runs-on: ubuntu-latest
  steps:
    - name: Upload saved artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: $GITHUB_WORKSPACE/artifacts/
        # The above lines upload saved artifacts for download.
