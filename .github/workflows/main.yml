name: Build, Test, and Publish JAR

on:
  push:
    branches:
      - main # Change this to your main branch name

jobs:
  build_test_and_publish_jar:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the project's source code from the repository.
      - name: Checkout project sources
        uses: actions/checkout@v2

      # Step 2: Cache Gradle dependencies (if not already cached).
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      # Step 3: Set up the Gradle build tool on the runner.
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Step 4: Run the Gradle build using the Gradle Wrapper.
      - name: Run build with Gradle Wrapper
        run: ./gradlew build

      # Step 5: Run tests using the Gradle Wrapper.
      - name: Run Test with Gradle Wrapper
        run: ./gradlew test

      # Step 6: Publish JUnit-style test reports (uncomment when needed).
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails

      # Step 7: Archive the build directory as an artifact if tests have passed.
      - name: Archive build directory if tests passed
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: build/


#  # Add a post-job to create a download link for the build directory.
#  post_job:
#    needs: build_test_and_publish_jar
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download build directory
#        uses: actions/download-artifact@v2
#        with:
#          name: build-artifact
#          path: path/to/your/downloaded/build-directory
